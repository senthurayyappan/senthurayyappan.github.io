@import 'tailwindcss';

:root {
  --dot-spacing: 4px;
  --dot-opacity: 0.01;
  --dot-color: var(--sa-black);

  --white: #ffffff;
  --black: #000000;
  /* --- Other Light Mode Vars --- */
  --sa-black: #26231C;
  --sa-white: #f1eade;
  --sa-off-white: #D9C8A9;
  --sa-yellow: #F9C90A;
  --sa-red: #A6382E;
  --sa-blue: #007D7E;
  --sa-green: #728C16;

  /* --- Light Mode Syntax Highlighting Vars --- */
  --sh-class: #4c97f8;        /* Example: Brighter blue */
  --sh-identifier: #d1d5db;   /* Example: Light gray */
  --sh-sign: #8996a3;        /* Example: Same as light */
  --sh-string: #5eead4;       /* Example: Teal */
  --sh-keyword: #f47067;      /* Example: Brighter red */
  --sh-comment: #9ca3af;      /* Example: Gray */
  --sh-jsxliterals: #a5b4fc;  /* Example: Indigo */
  --sh-property: #f59e0b;     /* Example: Amber */
  --sh-entity: #f59e0b;      /* Example: Amber */
  --sh-background: var(--sa-black);

  --background: var(--sa-white);
  --muted: var(--sa-blue);
  --accent: var(--sa-red);
  --text: var(--sa-black);
}

html {
  min-width: 320px;
  background-color: var(--background);
  overflow-x: visible;
}

/* --- Dark Mode Overrides --- */
.dark {
  --dot-color: var(--sa-white);
  /* --- Dark Mode Syntax Highlighting Vars --- */
  /* Replace these with your desired dark mode colors */
  --sh-class: #4c97f8;        /* Example: Brighter blue */
  --sh-identifier: #d1d5db;   /* Example: Light gray */
  --sh-sign: #8996a3;        /* Example: Same as light */
  --sh-string: #5eead4;       /* Example: Teal */
  --sh-keyword: #f47067;      /* Example: Brighter red */
  --sh-comment: #9ca3af;      /* Example: Gray */
  --sh-jsxliterals: #a5b4fc;  /* Example: Indigo */
  --sh-property: #f59e0b;     /* Example: Amber */
  --sh-entity: #f59e0b;      /* Example: Amber */
  --sh-background: var(--sa-black);

  /* --- Other Dark Mode Vars --- */
  --background: var(--sa-black);
  --muted: var(--sa-blue);
  --accent: var(--sa-yellow);
  --text: var(--sa-white);
}

body {
  background-color: transparent;
  color: var(--text);
  overflow-x: visible;
}

.sa-link {
  transition: all 150ms ease-out;
  text-decoration: underline;
  text-decoration-color: transparent;
  text-underline-offset: 4px;
  text-decoration-thickness: 2px;
  position: relative;
}

.sa-link:hover,
.sa-link:focus-visible {
  text-decoration-color: var(--accent) !important;
  transform: translateY(-1px);
}

.muted {
  color: var(--muted);
}

.accent {
  color: var(--accent);
}

.prose .anchor {
  @apply absolute invisible no-underline;

  margin-left: -1em;
  padding-right: 0.5em;
  width: 80%;
  max-width: 700px;
  cursor: pointer;
}

.sidebar {
  background-color: var(--background);
}

.anchor:hover {
  @apply visible;
}

.prose a {
  @apply underline transition-all decoration-neutral-400 dark:decoration-neutral-600 underline-offset-2 decoration-[0.1em];
}

.prose .anchor:after {
  @apply text-neutral-800 dark:text-neutral-700;
  content: '#';
}

.prose *:hover > .anchor {
  @apply visible;
}

.prose pre {
  @apply overflow-x-auto border border-neutral-800 py-4 px-3 text-sm rounded-md;
  background-color: var(--sh-background);
}

.dark .prose pre {
  @apply border-neutral-400;
}

.prose code {
  @apply px-1 py-0.5;
}

.prose pre code {
  @apply p-0;
  border: initial;
  line-height: 1.5;
}

.prose code span {
  @apply font-medium;
}

.prose img {
  /* Don't apply styles to next/image */
  @apply m-0;
}

.prose p {
  @apply my-4 text-neutral-800; 
}

.dark .prose p {
  @apply text-neutral-200;
}

.prose h1 {
  @apply text-4xl font-medium tracking-tight mt-6 mb-2;
}

.prose h2 {
  @apply text-xl font-medium tracking-tight mt-6 mb-2;
}

.prose h3 {
  @apply text-xl font-medium tracking-tight mt-6 mb-2;
}

.prose h4 {
  @apply text-lg font-medium tracking-tight mt-6 mb-2;
}

.prose strong {
  @apply font-medium;
}

.prose ul {
  @apply list-disc pl-6;
}

.prose ol {
  @apply list-decimal pl-6;
}

.prose > :first-child {
  /* Override removing top margin, causing layout shift */
  margin-top: 1.25em !important;
  margin-bottom: 1.25em !important;
}

pre::-webkit-scrollbar {
  display: none;
}

pre {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

/* Remove Safari input shadow on mobile */
input[type='text'],
input[type='email'] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

table {
  display: block;
  max-width: fit-content;
  overflow-x: auto;
  white-space: nowrap;
}

.title {
  text-wrap: balance;
  color: var(--accent);
}

.scrollbar-hide {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;  /* Chrome, Safari and Opera */
}

/* --- Halftone Effect --- */
html::before {
  content: '';
  position: fixed; /* Cover the viewport */
  inset: 0;
  /* Use two offset radial gradients for a staggered effect */
  background-image: 
    radial-gradient(circle, var(--dot-color) 1.5px, transparent 1.5px), /* Increased dot opacity slightly */
    radial-gradient(circle, var(--dot-color) 1.5px, transparent 1.5px);
  background-size: var(--dot-spacing) var(--dot-spacing); /* Dot spacing */
  background-position: 0 0, var(--dot-spacing) var(--dot-spacing); /* Offset the second layer */
  opacity: var(--dot-opacity); /* Keep overall opacity < 50% */
  z-index: -1; /* Position behind content */
  pointer-events: none; /* Allow clicks to pass through */
}

.dark html::before {
   /* Use two offset radial gradients for dark mode */
   background-image: 
    radial-gradient(circle, var(--sa-white) 1.5px, transparent 1.5px), /* Use --sa-white for dots */
    radial-gradient(circle, var(--sa-white) 1.5px, transparent 1.5px); /* Use --sa-white for dots */
}

/* comic book effect */
.comic {
  /* Removed original grid styles */
  display: grid; /* Or flex, depending on your outer layout */
  gap: 12px; /* Adjust gap as needed */
  margin-top: 12px;
  box-sizing: border-box; /* Keep this - it's generally good practice */
  /* Add margin to provide space for hover effects */
  /* Ensure content doesn't get clipped on hover */
  overflow: visible;
  /* The height will now be determined by the grid content */
}


/* Remove previous grid-specific panel rules */
/* .panel-1 to .panel-5 definitions removed */

/* --- NEW Comic Panel Styles --- */
.panel {
  background-color: var(--background-color); /* Fallback color */
  border:solid 1px var(--sa-black); /* Use theme color */
  box-shadow:0 6px 6px -6px rgba(0, 0, 0, 0.5); /* Adjusted shadow */
  /* display:inline-block; Remove, let grid/flex control display */
  /* flex:1 1; Remove, let grid/flex control sizing */
  min-height: 200px; /* Set minimum height, allow stretching */
  /* margin:1vmin; Remove, use grid gap */
  overflow:hidden;
  position:relative;
  background-size: cover; /* Ensure background image covers */
  background-position: center; /* Center background image */
  /* font-family: 'Comic Sans MS', cursive; Moved to .comic parent */
}

/* Ensure panel works in dark mode */
.dark .panel {
  border-color: var(--sa-white);
  box-shadow:0 6px 6px -6px rgba(0, 0, 0, 0.3);
}

.panel .text {
  background-color: var(--white);
  color: var(--black);
  border:solid 2px var(--black);
  margin:0;
  padding:3px 16px 6px;
  position: absolute;
  z-index: 1;
  /* font-weight: 600; */
  font-size: clamp(0.75rem, 2vw, 1rem);
}

.dark .panel .text {
  background-color: var(--white);
  color: var(--black);
  border-color: var(--black);
}


.panel .top-left {
  left:-6px;
  /* position:absolute; Already set on .text */
  top:-2px;
}

.panel .bottom-right {
  bottom:-2px;
  /* position:absolute; Already set on .text */
  right:-6px;
}

.panel .top-right {
  right:-6px;
  top:-2px;
}

.panel .bottom-left {
  bottom:-2px;
  /* position:absolute; Already set on .text */
  left:-6px;
}

.panel .speech {
  background-color: var(--white);
  border:solid 2px var(--sa-black);
  border-radius:4px;
  display:inline-block;
  margin:.5em;
  padding:.5em 1em;
  position:relative;
  z-index: 1;
  color: var(--black);
  font-family: inherit;
  font-size: clamp(0.75rem, 2vw, 1rem);
}

.dark .panel .speech {
  background-color: var(--white);
  /* color: var(--black); */ /* Removed previously for utility class compatibility */
  border-color: var(--black);
  /* NOTE: font-weight will be inherited from the light mode rule unless overridden here */
}

.panel .speech:before {
  border:solid 12px transparent;
  border-left:solid 12px var(--black);
  border-top:solid 12px var(--black);
  bottom:-24px; /* Adjust as needed */
  content:"";
  height:0;
  left:24px; /* Adjust as needed */
  position:absolute;
  transform:skew(-15deg);
  width:0;
}

.dark .panel .speech:before {
  border-left-color: var(--white);
  border-top-color: var(--white);
}

.panel .speech:after {
  border:solid 10px transparent;
  border-left:solid 10px var(--white); /* Use theme color */
  border-top:solid 10px var(--white); /* Use theme color */
  bottom:-19px; /* Adjust as needed */
  content:"";
  height:0;
  left:27px; /* Adjust as needed */
  position:absolute;
  transform:skew(-15deg);
  width:0;
}

.dark .panel .speech:after {
  border-left-color: var(--white); /* Invert for dark mode */
  border-top-color: var(--white); /* Invert for dark mode */
}

/* Remove unused panel definitions */
/* .panel-5 to .panel-11 definitions removed */

/* --- NEW Description Styles --- */
.panel .description {
  position: absolute;
  left: 0;
  right: 0;
  background-color: rgba(255, 255, 255, 1.0);
  color: var(--sa-black);
  padding: clamp(4px, 1vw, 6px) clamp(8px, 1.5vw, 12px) clamp(8px, 1.5vw, 12px);
  margin: 0;
  border-top: solid 2px var(--sa-black);
  border-bottom: solid 2px var(--sa-black);
  font-family: inherit;
  font-size: clamp(0.75rem, 2vw, 1rem);
  text-align: justify;
  z-index: 1;
  box-sizing: border-box;
  /* font-style: italic; */
  /* font-weight: 600; */
  line-height: normal;
}

.panel .description-top {
  top: 0;
  border-bottom-width: 2px; /* Only bottom border when at top */
  border-top-width: 0;
}

.panel .description-bottom {
  bottom: 0;
  border-top-width: 2px; /* Only top border when at bottom */
  border-bottom-width: 0;
}

/* --- End NEW Description Styles --- */

/* --- NEW Hover effect for linked panels --- */
.panel-link-hover {
  position: relative;
  overflow: hidden;
  transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1),
              box-shadow 200ms cubic-bezier(0.4, 0, 0.2, 1);
}

.panel-link-hover:hover {
  z-index: 10;
  border-bottom: solid 2px var(--accent) !important;
  transform: translateY(-8px);
  /* Subtle bottom shadow for depth */
  box-shadow: 0 8px 0px var(--accent) !important;
}

/* Subtle shine effect */
.panel-link-hover:hover::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(45deg, transparent, color-mix(in srgb, var(--sa-white) 15%, transparent), transparent);
  animation: shine 1.5s ease-in-out;
  z-index: 1;
  opacity: 0;
  pointer-events: none;
}

@keyframes shine {
  0% {
    transform: translateX(-100%) translateY(100%);
    opacity: 0;
  }
  30% {
    opacity: 0.6;
  }
  70% {
    opacity: 0.6;
  }
  100% {
    transform: translateX(100%) translateY(-100%);
    opacity: 0;
  }
}

.hover\:shadow-glow:hover {
  box-shadow: 0 0 8px 2px var(--accent, 0.1);
}

.panel-button {
  @apply border-4 border-transparent;
}

.panel-button:hover {
  border-color: var(--accent);
}

@media screen and (min-height: 800px) {
  .comic {
    grid-template-rows: minmax(250px, 1fr) minmax(250px, 1fr) auto auto;
  }
  
  .panel {
    min-height: 250px;
  }
}

@media screen and (min-height: 1200px) {
  .comic {
    grid-template-rows: minmax(300px, 1fr) minmax(300px, 1fr) auto auto;
  }
  
  .panel {
    min-height: 300px;
  }
}